// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleRepository.DAL.Context;

namespace VehicleRepository.DAL.Migrations
{
    [DbContext(typeof(sqlDbContext))]
    partial class sqlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VehicleRepository.Entities.Concrete.Boat", b =>
                {
                    b.Property<int>("BoatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ColorID")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OnHeadlights")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("BoatID");

                    b.HasIndex("ColorID");

                    b.HasIndex("UserID");

                    b.ToTable("Boats");
                });

            modelBuilder.Entity("VehicleRepository.Entities.Concrete.Bus", b =>
                {
                    b.Property<int>("BusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ColorID")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OnHeadlights")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("BusID");

                    b.HasIndex("ColorID");

                    b.HasIndex("UserID");

                    b.ToTable("Buses");
                });

            modelBuilder.Entity("VehicleRepository.Entities.Concrete.Car", b =>
                {
                    b.Property<int>("CarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ColorID")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OnHeadlights")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("CarID");

                    b.HasIndex("ColorID");

                    b.HasIndex("UserID");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("VehicleRepository.Entities.Concrete.Color", b =>
                {
                    b.Property<int>("ColorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ColorID");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("VehicleRepository.Entities.Concrete.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VehicleRepository.Entities.Concrete.Boat", b =>
                {
                    b.HasOne("VehicleRepository.Entities.Concrete.Color", "Color")
                        .WithMany("ColorBoats")
                        .HasForeignKey("ColorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleRepository.Entities.Concrete.User", "BoatUser")
                        .WithMany("UserBoats")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoatUser");

                    b.Navigation("Color");
                });

            modelBuilder.Entity("VehicleRepository.Entities.Concrete.Bus", b =>
                {
                    b.HasOne("VehicleRepository.Entities.Concrete.Color", "Color")
                        .WithMany("ColorBuses")
                        .HasForeignKey("ColorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleRepository.Entities.Concrete.User", "BusUser")
                        .WithMany("UserBuses")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusUser");

                    b.Navigation("Color");
                });

            modelBuilder.Entity("VehicleRepository.Entities.Concrete.Car", b =>
                {
                    b.HasOne("VehicleRepository.Entities.Concrete.Color", "Color")
                        .WithMany("ColorCars")
                        .HasForeignKey("ColorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleRepository.Entities.Concrete.User", "CarUser")
                        .WithMany("UserCars")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarUser");

                    b.Navigation("Color");
                });

            modelBuilder.Entity("VehicleRepository.Entities.Concrete.Color", b =>
                {
                    b.Navigation("ColorBoats");

                    b.Navigation("ColorBuses");

                    b.Navigation("ColorCars");
                });

            modelBuilder.Entity("VehicleRepository.Entities.Concrete.User", b =>
                {
                    b.Navigation("UserBoats");

                    b.Navigation("UserBuses");

                    b.Navigation("UserCars");
                });
#pragma warning restore 612, 618
        }
    }
}
